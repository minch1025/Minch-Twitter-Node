{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\n\n/* eslint-disable arrow-parens */\nimport React, { useCallback, useState, useEffect, useRef } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { ADD_POST_REQUEST, REMOVE_IMAGE, UPLOAD_IMAGES_REQUEST } from \"../reducers/post\";\n\nvar PostForm = function PostForm() {\n  var dispatch = useDispatch();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths,\n      isAddingPost = _useSelector.isAddingPost,\n      postAdded = _useSelector.postAdded;\n\n  var imageInput = useRef();\n  useEffect(function () {\n    if (postAdded) {\n      setText(\"\");\n    }\n  }, [postAdded]);\n  var onSubmitForm = useCallback(function (e) {\n    e.preventDefault();\n\n    if (!text || !text.trim()) {\n      return alert(\"Please insert context.\");\n    }\n\n    var formData = new FormData();\n    imagePaths.forEach(function (i) {\n      formData.append(\"image\", i);\n    });\n    formData.append(\"content\", text);\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: formData\n    });\n  }, [text, imagePaths]);\n  var onChangeText = useCallback(function (e) {\n    setText(e.target.value);\n  }, []);\n  var onChangeImages = useCallback(function (e) {\n    console.log(e.target.files);\n    var imageFormData = new FormData();\n    [].forEach.call(e.target.files, function (f) {\n      imageFormData.append(\"image\", f);\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData\n    });\n  }, []);\n  var onClickImageUpload = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  var onRemoveImage = useCallback(function (index) {\n    return function () {\n      dispatch({\n        type: REMOVE_IMAGE,\n        index: index\n      });\n    };\n  }, []);\n  return React.createElement(Form, {\n    style: {\n      margin: \"10px 0 20px\"\n    },\n    encType: \"multipart/form-data\",\n    onSubmit: onSubmitForm\n  }, React.createElement(Input.TextArea, {\n    maxLength: 140,\n    placeholder: \"How was your today?\",\n    value: text,\n    onChange: onChangeText\n  }), React.createElement(\"div\", null, React.createElement(\"input\", {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    onChange: onChangeImages\n  }), React.createElement(Button, {\n    onClick: onClickImageUpload\n  }, \"Upload images\"), React.createElement(Button, {\n    type: \"primary\",\n    style: {\n      float: \"right\"\n    },\n    htmlType: \"submit\",\n    loading: isAddingPost\n  }, \"TwitTwit\")), React.createElement(\"div\", null, imagePaths.map(function (v, i) {\n    return React.createElement(\"div\", {\n      key: v,\n      style: {\n        display: \"inline-block\"\n      }\n    }, React.createElement(\"img\", {\n      src: \"http://localhost:3065/\".concat(v),\n      style: {\n        width: \"200px\"\n      },\n      alt: v\n    }), React.createElement(\"div\", null, React.createElement(Button, {\n      onClick: onRemoveImage(i)\n    }, \"Deete\")));\n  })));\n};\n\nexport default PostForm;","map":{"version":3,"sources":["/Users/kuonminchiyou/portfolioMin/Minch-twitter/front/containers/PostForm.js"],"names":["React","useCallback","useState","useEffect","useRef","Form","Input","Button","useSelector","useDispatch","ADD_POST_REQUEST","REMOVE_IMAGE","UPLOAD_IMAGES_REQUEST","PostForm","dispatch","text","setText","state","post","imagePaths","isAddingPost","postAdded","imageInput","onSubmitForm","e","preventDefault","trim","alert","formData","FormData","forEach","i","append","type","data","onChangeText","target","value","onChangeImages","console","log","files","imageFormData","call","f","onClickImageUpload","current","click","onRemoveImage","index","margin","float","map","v","display","width"],"mappings":"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","sourcesContent":["/* eslint-disable arrow-parens */\nimport React, { useCallback, useState, useEffect, useRef } from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {\n  ADD_POST_REQUEST,\n  REMOVE_IMAGE,\n  UPLOAD_IMAGES_REQUEST,\n} from \"../reducers/post\";\n\nconst PostForm = () => {\n  const dispatch = useDispatch();\n  const [text, setText] = useState(\"\");\n  const { imagePaths, isAddingPost, postAdded } = useSelector(\n    (state) => state.post\n  );\n  const imageInput = useRef();\n\n  useEffect(() => {\n    if (postAdded) {\n      setText(\"\");\n    }\n  }, [postAdded]);\n\n  const onSubmitForm = useCallback(\n    (e) => {\n      e.preventDefault();\n      if (!text || !text.trim()) {\n        return alert(\"Please insert context.\");\n      }\n      const formData = new FormData();\n      imagePaths.forEach((i) => {\n        formData.append(\"image\", i);\n      });\n      formData.append(\"content\", text);\n      dispatch({\n        type: ADD_POST_REQUEST,\n        data: formData,\n      });\n    },\n    [text, imagePaths]\n  );\n\n  const onChangeText = useCallback((e) => {\n    setText(e.target.value);\n  }, []);\n\n  const onChangeImages = useCallback((e) => {\n    console.log(e.target.files);\n    const imageFormData = new FormData();\n    [].forEach.call(e.target.files, (f) => {\n      imageFormData.append(\"image\", f);\n    });\n    dispatch({\n      type: UPLOAD_IMAGES_REQUEST,\n      data: imageFormData,\n    });\n  }, []);\n\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n\n  const onRemoveImage = useCallback(\n    (index) => () => {\n      dispatch({\n        type: REMOVE_IMAGE,\n        index,\n      });\n    },\n    []\n  );\n\n  return (\n    <Form\n      style={{ margin: \"10px 0 20px\" }}\n      encType=\"multipart/form-data\"\n      onSubmit={onSubmitForm}\n    >\n      <Input.TextArea\n        maxLength={140}\n        placeholder=\"How was your today?\"\n        value={text}\n        onChange={onChangeText}\n      />\n      <div>\n        <input\n          type=\"file\"\n          multiple\n          hidden\n          ref={imageInput}\n          onChange={onChangeImages}\n        />\n        <Button onClick={onClickImageUpload}>Upload images</Button>\n        <Button\n          type=\"primary\"\n          style={{ float: \"right\" }}\n          htmlType=\"submit\"\n          loading={isAddingPost}\n        >\n          TwitTwit\n        </Button>\n      </div>\n      <div>\n        {imagePaths.map((v, i) => (\n          <div key={v} style={{ display: \"inline-block\" }}>\n            <img\n              src={`http://localhost:3065/${v}`}\n              style={{ width: \"200px\" }}\n              alt={v}\n            />\n            <div>\n              <Button onClick={onRemoveImage(i)}>Deete</Button>\n            </div>\n          </div>\n        ))}\n      </div>\n    </Form>\n  );\n};\n\nexport default PostForm;\n"]},"metadata":{},"sourceType":"module"}