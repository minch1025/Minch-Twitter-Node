{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\n\n/* eslint-disable import/no-extraneous-dependencies */\n\n/* eslint-disable react/jsx-filename-extension */\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Slick from \"react-slick\";\nimport { Overlay, Header, CloseBtn, SlickWrapper, ImgWrapper, Indicator } from \"./style\";\n\nvar ImagesZoom = function ImagesZoom(_ref) {\n  var images = _ref.images,\n      onClose = _ref.onClose;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentSlide = _useState2[0],\n      setCurrentSlide = _useState2[1];\n\n  return React.createElement(Overlay, null, React.createElement(Header, null, React.createElement(\"h1\", null, \"Details\"), React.createElement(CloseBtn, {\n    type: \"close\",\n    onClick: onClose\n  })), React.createElement(SlickWrapper, null, React.createElement(\"div\", null, React.createElement(Slick, {\n    initialSlide: 0,\n    afterChange: function afterChange(slide) {\n      return setCurrentSlide(slide);\n    },\n    infinite: false,\n    arrows: true,\n    slidesToShow: 1,\n    slidesToScroll: 1\n  }, images.map(function (v) {\n    return React.createElement(ImgWrapper, null, React.createElement(\"img\", {\n      src: \"http://localhost:3065/\".concat(v.src)\n    }));\n  })), React.createElement(Indicator, null, React.createElement(\"div\", null, currentSlide + 1, \" / \", images.length)))));\n};\n\nImagesZoom.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.shape({\n    src: PropTypes.string\n  })).isRequired,\n  onClose: PropTypes.func.isRequired\n};\nexport default ImagesZoom;","map":{"version":3,"sources":["/Users/kuonminchiyou/portfolioMin/Minch-twitter/front/components/ImagesZoom/index.js"],"names":["React","useState","PropTypes","Slick","Overlay","Header","CloseBtn","SlickWrapper","ImgWrapper","Indicator","ImagesZoom","images","onClose","currentSlide","setCurrentSlide","slide","map","v","src","length","propTypes","arrayOf","shape","string","isRequired","func"],"mappings":";;AAAA;;AACA;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SACEC,OADF,EAEEC,MAFF,EAGEC,QAHF,EAIEC,YAJF,EAKEC,UALF,EAMEC,SANF,QAOO,SAPP;;AASA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAyB;AAAA,MAAtBC,MAAsB,QAAtBA,MAAsB;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AAAA,kBACFX,QAAQ,CAAC,CAAD,CADN;AAAA;AAAA,MACnCY,YADmC;AAAA,MACrBC,eADqB;;AAG1C,SACE,oBAAC,OAAD,QACE,oBAAC,MAAD,QACE,0CADF,EAEE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAC,OAAf;AAAuB,IAAA,OAAO,EAAEF;AAAhC,IAFF,CADF,EAKE,oBAAC,YAAD,QACE,iCACE,oBAAC,KAAD;AACE,IAAA,YAAY,EAAE,CADhB;AAEE,IAAA,WAAW,EAAE,qBAACG,KAAD;AAAA,aAAWD,eAAe,CAACC,KAAD,CAA1B;AAAA,KAFf;AAGE,IAAA,QAAQ,EAAE,KAHZ;AAIE,IAAA,MAAM,MAJR;AAKE,IAAA,YAAY,EAAE,CALhB;AAME,IAAA,cAAc,EAAE;AANlB,KAQGJ,MAAM,CAACK,GAAP,CAAW,UAACC,CAAD;AAAA,WACV,oBAAC,UAAD,QACE;AAAK,MAAA,GAAG,kCAA2BA,CAAC,CAACC,GAA7B;AAAR,MADF,CADU;AAAA,GAAX,CARH,CADF,EAeE,oBAAC,SAAD,QACE,iCACGL,YAAY,GAAG,CADlB,SACwBF,MAAM,CAACQ,MAD/B,CADF,CAfF,CADF,CALF,CADF;AA+BD,CAlCD;;AAoCAT,UAAU,CAACU,SAAX,GAAuB;AACrBT,EAAAA,MAAM,EAAET,SAAS,CAACmB,OAAV,CACNnB,SAAS,CAACoB,KAAV,CAAgB;AACdJ,IAAAA,GAAG,EAAEhB,SAAS,CAACqB;AADD,GAAhB,CADM,EAINC,UALmB;AAMrBZ,EAAAA,OAAO,EAAEV,SAAS,CAACuB,IAAV,CAAeD;AANH,CAAvB;AASA,eAAed,UAAf","sourcesContent":["/* eslint-disable import/no-extraneous-dependencies */\n/* eslint-disable react/jsx-filename-extension */\nimport React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Slick from \"react-slick\";\nimport {\n  Overlay,\n  Header,\n  CloseBtn,\n  SlickWrapper,\n  ImgWrapper,\n  Indicator,\n} from \"./style\";\n\nconst ImagesZoom = ({ images, onClose }) => {\n  const [currentSlide, setCurrentSlide] = useState(0);\n\n  return (\n    <Overlay>\n      <Header>\n        <h1>Details</h1>\n        <CloseBtn type=\"close\" onClick={onClose} />\n      </Header>\n      <SlickWrapper>\n        <div>\n          <Slick\n            initialSlide={0}\n            afterChange={(slide) => setCurrentSlide(slide)}\n            infinite={false}\n            arrows\n            slidesToShow={1}\n            slidesToScroll={1}\n          >\n            {images.map((v) => (\n              <ImgWrapper>\n                <img src={`http://localhost:3065/${v.src}`} />\n              </ImgWrapper>\n            ))}\n          </Slick>\n          <Indicator>\n            <div>\n              {currentSlide + 1} / {images.length}\n            </div>\n          </Indicator>\n        </div>\n      </SlickWrapper>\n    </Overlay>\n  );\n};\n\nImagesZoom.propTypes = {\n  images: PropTypes.arrayOf(\n    PropTypes.shape({\n      src: PropTypes.string,\n    })\n  ).isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default ImagesZoom;\n"]},"metadata":{},"sourceType":"module"}