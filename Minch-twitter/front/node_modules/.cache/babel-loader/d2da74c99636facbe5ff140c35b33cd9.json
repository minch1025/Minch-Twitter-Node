{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n\n/* eslint-disable arrow-parens */\n\n/* eslint-disable react/jsx-filename-extension */\nimport React, { useCallback, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { LOAD_HASHTAG_POSTS_REQUEST } from \"../reducers/post\";\nimport PostCard from \"../containers/PostCard\";\n\nvar Hashtag = function Hashtag(_ref) {\n  var tag = _ref.tag;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector.mainPosts,\n      hasMorePost = _useSelector.hasMorePost;\n\n  var onScroll = useCallback(function () {\n    if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n      if (hasMorePost) {\n        dispatch({\n          type: LOAD_HASHTAG_POSTS_REQUEST,\n          lastId: mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id,\n          data: tag\n        });\n      }\n    }\n  }, [hasMorePost, mainPosts.length, tag]);\n  useEffect(function () {\n    window.addEventListener(\"scroll\", onScroll);\n    return function () {\n      window.removeEventListener(\"scroll\", onScroll);\n    };\n  }, [mainPosts.length, hasMorePost, tag]);\n  return React.createElement(\"div\", null, mainPosts.map(function (c) {\n    return React.createElement(PostCard, {\n      key: c.id,\n      post: c\n    });\n  }));\n};\n\nHashtag.propTypes = {\n  tag: PropTypes.string.isRequired\n};\n\nHashtag.getInitialProps =\n/*#__PURE__*/\nfunction () {\n  var _ref2 = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(context) {\n    var tag;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            tag = context.query.tag;\n            console.log(\"hashtag getInitialProps\", tag);\n            context.store.dispatch({\n              type: LOAD_HASHTAG_POSTS_REQUEST,\n              data: tag\n            });\n            return _context.abrupt(\"return\", {\n              tag: tag\n            });\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default Hashtag;","map":{"version":3,"sources":["/Users/kuonminchiyou/portfolioMin/Minch-twitter/front/pages/hashtag.js"],"names":["React","useCallback","useEffect","PropTypes","useDispatch","useSelector","LOAD_HASHTAG_POSTS_REQUEST","PostCard","Hashtag","tag","dispatch","state","post","mainPosts","hasMorePost","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","type","lastId","length","id","data","addEventListener","removeEventListener","map","c","propTypes","string","isRequired","getInitialProps","context","query","console","log","store"],"mappings":";;;AAAA;;AACA;AACA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,QAA8C,OAA9C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,0BAAT,QAA2C,kBAA3C;AACA,OAAOC,QAAP,MAAqB,wBAArB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAa;AAAA,MAAVC,GAAU,QAAVA,GAAU;AAC3B,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;;AAD2B,qBAGQC,WAAW,CAAC,UAACM,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAjB;AAAA,GAAD,CAHnB;AAAA,MAGnBC,SAHmB,gBAGnBA,SAHmB;AAAA,MAGRC,WAHQ,gBAGRA,WAHQ;;AAK3B,MAAMC,QAAQ,GAAGd,WAAW,CAAC,YAAM;AACjC,QACEe,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,GACAF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAF1C,EAGE;AACA,UAAIP,WAAJ,EAAiB;AACfJ,QAAAA,QAAQ,CAAC;AACPY,UAAAA,IAAI,EAAEhB,0BADC;AAEPiB,UAAAA,MAAM,EACJV,SAAS,CAACA,SAAS,CAACW,MAAV,GAAmB,CAApB,CAAT,IACAX,SAAS,CAACA,SAAS,CAACW,MAAV,GAAmB,CAApB,CAAT,CAAgCC,EAJ3B;AAKPC,UAAAA,IAAI,EAAEjB;AALC,SAAD,CAAR;AAOD;AACF;AACF,GAf2B,EAezB,CAACK,WAAD,EAAcD,SAAS,CAACW,MAAxB,EAAgCf,GAAhC,CAfyB,CAA5B;AAiBAP,EAAAA,SAAS,CAAC,YAAM;AACdc,IAAAA,MAAM,CAACW,gBAAP,CAAwB,QAAxB,EAAkCZ,QAAlC;AACA,WAAO,YAAM;AACXC,MAAAA,MAAM,CAACY,mBAAP,CAA2B,QAA3B,EAAqCb,QAArC;AACD,KAFD;AAGD,GALQ,EAKN,CAACF,SAAS,CAACW,MAAX,EAAmBV,WAAnB,EAAgCL,GAAhC,CALM,CAAT;AAOA,SACE,iCACGI,SAAS,CAACgB,GAAV,CAAc,UAACC,CAAD;AAAA,WACb,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,CAAC,CAACL,EAAjB;AAAqB,MAAA,IAAI,EAAEK;AAA3B,MADa;AAAA,GAAd,CADH,CADF;AAOD,CApCD;;AAsCAtB,OAAO,CAACuB,SAAR,GAAoB;AAClBtB,EAAAA,GAAG,EAAEN,SAAS,CAAC6B,MAAV,CAAiBC;AADJ,CAApB;;AAIAzB,OAAO,CAAC0B,eAAR;AAAA;AAAA;AAAA;AAAA;AAAA,2BAA0B,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAChB1B,YAAAA,GADgB,GACR0B,OAAO,CAACC,KADA,CAChB3B,GADgB;AAExB4B,YAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuC7B,GAAvC;AACA0B,YAAAA,OAAO,CAACI,KAAR,CAAc7B,QAAd,CAAuB;AACrBY,cAAAA,IAAI,EAAEhB,0BADe;AAErBoB,cAAAA,IAAI,EAAEjB;AAFe,aAAvB;AAHwB,6CAOjB;AAAEA,cAAAA,GAAG,EAAHA;AAAF,aAPiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAAA;AAAA;AAAA;AAAA;;AAUA,eAAeD,OAAf","sourcesContent":["/* eslint-disable arrow-parens */\n/* eslint-disable react/jsx-filename-extension */\nimport React, { useCallback, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { LOAD_HASHTAG_POSTS_REQUEST } from \"../reducers/post\";\nimport PostCard from \"../containers/PostCard\";\n\nconst Hashtag = ({ tag }) => {\n  const dispatch = useDispatch();\n\n  const { mainPosts, hasMorePost } = useSelector((state) => state.post);\n\n  const onScroll = useCallback(() => {\n    if (\n      window.scrollY + document.documentElement.clientHeight >\n      document.documentElement.scrollHeight - 300\n    ) {\n      if (hasMorePost) {\n        dispatch({\n          type: LOAD_HASHTAG_POSTS_REQUEST,\n          lastId:\n            mainPosts[mainPosts.length - 1] &&\n            mainPosts[mainPosts.length - 1].id,\n          data: tag,\n        });\n      }\n    }\n  }, [hasMorePost, mainPosts.length, tag]);\n\n  useEffect(() => {\n    window.addEventListener(\"scroll\", onScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", onScroll);\n    };\n  }, [mainPosts.length, hasMorePost, tag]);\n\n  return (\n    <div>\n      {mainPosts.map((c) => (\n        <PostCard key={c.id} post={c} />\n      ))}\n    </div>\n  );\n};\n\nHashtag.propTypes = {\n  tag: PropTypes.string.isRequired,\n};\n\nHashtag.getInitialProps = async (context) => {\n  const { tag } = context.query;\n  console.log(\"hashtag getInitialProps\", tag);\n  context.store.dispatch({\n    type: LOAD_HASHTAG_POSTS_REQUEST,\n    data: tag,\n  });\n  return { tag };\n};\n\nexport default Hashtag;\n"]},"metadata":{},"sourceType":"module"}